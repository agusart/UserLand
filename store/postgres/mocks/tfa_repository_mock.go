// Code generated by MockGen. DO NOT EDIT.
// Source: store/postgres/tfa_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	postgres "userland/store/postgres"

	gomock "github.com/golang/mock/gomock"
)

// MockTfaStoreInterface is a mock of TfaStoreInterface interface.
type MockTfaStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTfaStoreInterfaceMockRecorder
}

// MockTfaStoreInterfaceMockRecorder is the mock recorder for MockTfaStoreInterface.
type MockTfaStoreInterfaceMockRecorder struct {
	mock *MockTfaStoreInterface
}

// NewMockTfaStoreInterface creates a new mock instance.
func NewMockTfaStoreInterface(ctrl *gomock.Controller) *MockTfaStoreInterface {
	mock := &MockTfaStoreInterface{ctrl: ctrl}
	mock.recorder = &MockTfaStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTfaStoreInterface) EXPECT() *MockTfaStoreInterfaceMockRecorder {
	return m.recorder
}

// CheckTfaBackupCode mocks base method.
func (m *MockTfaStoreInterface) CheckTfaBackupCode(userId uint, tfaCode string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckTfaBackupCode", userId, tfaCode)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckTfaBackupCode indicates an expected call of CheckTfaBackupCode.
func (mr *MockTfaStoreInterfaceMockRecorder) CheckTfaBackupCode(userId, tfaCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckTfaBackupCode", reflect.TypeOf((*MockTfaStoreInterface)(nil).CheckTfaBackupCode), userId, tfaCode)
}

// CreateTfaBackupCode mocks base method.
func (m *MockTfaStoreInterface) CreateTfaBackupCode(userId uint) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTfaBackupCode", userId)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTfaBackupCode indicates an expected call of CreateTfaBackupCode.
func (mr *MockTfaStoreInterfaceMockRecorder) CreateTfaBackupCode(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTfaBackupCode", reflect.TypeOf((*MockTfaStoreInterface)(nil).CreateTfaBackupCode), userId)
}

// DeleteTfaCode mocks base method.
func (m *MockTfaStoreInterface) DeleteTfaCode(userId uint, tfaCode string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTfaCode", userId, tfaCode)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTfaCode indicates an expected call of DeleteTfaCode.
func (mr *MockTfaStoreInterfaceMockRecorder) DeleteTfaCode(userId, tfaCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTfaCode", reflect.TypeOf((*MockTfaStoreInterface)(nil).DeleteTfaCode), userId, tfaCode)
}

// GetUserTfaDetail mocks base method.
func (m *MockTfaStoreInterface) GetUserTfaDetail(userId uint) (*postgres.TfaDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserTfaDetail", userId)
	ret0, _ := ret[0].(*postgres.TfaDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserTfaDetail indicates an expected call of GetUserTfaDetail.
func (mr *MockTfaStoreInterfaceMockRecorder) GetUserTfaDetail(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserTfaDetail", reflect.TypeOf((*MockTfaStoreInterface)(nil).GetUserTfaDetail), userId)
}

// RemoveTfaStatus mocks base method.
func (m *MockTfaStoreInterface) RemoveTfaStatus(userId uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTfaStatus", userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveTfaStatus indicates an expected call of RemoveTfaStatus.
func (mr *MockTfaStoreInterfaceMockRecorder) RemoveTfaStatus(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTfaStatus", reflect.TypeOf((*MockTfaStoreInterface)(nil).RemoveTfaStatus), userId)
}

// SaveUserTfaSecret mocks base method.
func (m *MockTfaStoreInterface) SaveUserTfaSecret(tfaSecret string, userId uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUserTfaSecret", tfaSecret, userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUserTfaSecret indicates an expected call of SaveUserTfaSecret.
func (mr *MockTfaStoreInterfaceMockRecorder) SaveUserTfaSecret(tfaSecret, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUserTfaSecret", reflect.TypeOf((*MockTfaStoreInterface)(nil).SaveUserTfaSecret), tfaSecret, userId)
}
